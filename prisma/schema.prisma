generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Workspace {
  id          String  @id @default(cuid())
  name        String
  slug        String  @unique
  description String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  simulations Simulation[]

  @@map("workspaces")
}

enum DataSource {
  DATABRICKS
  SIMULATION
}

model Simulation {
  id          String     @id @default(cuid())
  name        String
  description String?
  dataSource  DataSource @default(DATABRICKS) @map("data_source")

  formula   Formula? @relation(fields: [formulaId], references: [id], onDelete: Cascade)
  formulaId String?  @map("formula_id")

  startDate DateTime @map("start_date")
  endDate   DateTime @map("end_date")

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String    @map("workspace_id")

  executions Execution[]

  operator             String?
  operatorNumber       Int?     @map("operator_number")
  operatorIsPercentage Boolean? @map("operator_is_percentage")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("simulations")
}

enum ExecutionStatus {
  DRAFT
  PENDING
  RUNNING
  COMPLETED
  ERROR
  CALCULATED
  ERROR_WHILE_CALCULATING
}

model Execution {
  id      String          @id @default(cuid())
  status  ExecutionStatus @default(PENDING)
  error   String?
  current Boolean?        @default(true)

  filters       Json?
  values        Json?
  resultFormula String? @map("result_formula")

  readyStateAt DateTime? @map("ready_state_at")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  simulation   Simulation? @relation(fields: [simulationId], references: [id])
  simulationId String?     @map("simulation_id")

  @@map("executions")
}

model Formula {
  id          String  @id @default(cuid())
  name        String
  description String?
  expression  String

  variables   Variable[]
  simulations Simulation[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Variable {
  id           String  @id @default(cuid())
  name         String
  description  String?
  key          String
  exampleValue Float?  @map("example_value")

  formulaId String  @map("formula_id")
  formula   Formula @relation(fields: [formulaId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([formulaId, name])
}
